#!/bin/bash

## Description: Install Drupal using existing configuration
## Usage: install-drupal

echo "Installing Drupal..."

# Create necessary directories with proper permissions
sudo mkdir -p /app/tmp
sudo chmod 777 /app/tmp

# Install Drupal using Varbase profile
echo "Installing Drupal using Varbase profile..."
drush site:install varbase --yes \
  --account-name="webmaster" \
  --account-pass="dD.123123ddd" \
  --account-mail="webmaster@vardot.com" \
  --locale="en"

drush cr

# Define the path to the ConfigBit.php file
CONFIG_BIT_FILE="/var/www/html/docroot/profiles/varbase/src/Config/ConfigBit.php"
CONFIG_BIT_BACKUP_FILE="${CONFIG_BIT_FILE}.backup"

# Backup the original ConfigBit.php file
echo "Backing up the original ConfigBit.php file..."
cp "$CONFIG_BIT_FILE" "$CONFIG_BIT_BACKUP_FILE"

# Modify the ConfigBit.php file to disable the configSave method
echo "Modifying the ConfigBit.php file to disable the configSave method..."
sed -i 's/public function configSave(ConfigCrudEvent $event) {/public function configSave(ConfigCrudEvent $event) { return; /' "$CONFIG_BIT_FILE"


# Get the UUID from configuration
CONFIG_UUID=$(grep "uuid:" /var/www/html/config/sync/system.site.yml | awk '{print $2}')

# Set the site UUID to match configuration
echo "Setting site UUID to match configuration..."
drush config:set system.site uuid "$CONFIG_UUID" -y

# Clear caches to register new layouts
drush cr

# Remove conflicting configuration entities
echo "Deleting conflicting configuration..."
drush config:delete media.type.gallery -y

# Delete problematic entities before importing configuration
echo "Removing existing entities that conflict with configuration import..."

# Handle the Simple workflow
echo "Removing Simple Workflow entities..."
drush sql-query "DELETE FROM content_moderation_state_field_data"
drush sql-query "DELETE FROM content_moderation_state_field_revision"
drush sql-query "DELETE FROM content_moderation_state"

# Delete content types and other entities
echo "Removing content types and other entities..."
drush entity:delete node --bundle=landing_page_lb
drush entity:delete block_content --bundle=basic
drush entity:delete shortcut_set
drush entity:delete simple_sitemap

drush cr

# NEW: Clean up roles before config import
echo "Cleaning up roles..."
drush php:eval '
$roles = ["authenticated", "administrator", "content_editor", "content_admin", "site_admin", "editor"];
foreach ($roles as $role_name) {
  $role = \Drupal\user\Entity\Role::load($role_name);
  if ($role) {
    $permissions = $role->getPermissions();
    $invalid_perms = ["delete own gallery media", "edit own gallery media", "create gallery media", "delete any gallery media", "edit any gallery media"];
    $new_permissions = array_diff($permissions, $invalid_perms);
    $role->set("permissions", $new_permissions);
    $role->save();
  }
}
'

# Import the configuration
drush cim -y

echo "Restoring the original ConfigBit.php file..."
mv "$CONFIG_BIT_BACKUP_FILE" "$CONFIG_BIT_FILE"

# Final cache rebuild
echo "Rebuilding cache..."
drush cr

echo "Drupal installation completed!"
