#!/bin/bash

## #ddev-generated
## Description: Run all linting tools on changed custom modules and themes files
# Fail on:
# -u : undefined variables
# -o pipefail : failure in a pipeline propagates
# Usage: ddev dev-lint
#        In CI environment: Uses predefined changed files
#        In local environment: Uses git diff to detect changes

set -uo pipefail

# Track overall linting status
LINT_STATUS=0

echo "üîç Running linters..."

if [ "${IS_CI:-false}" = "TRUE" ]; then
    echo "üìã Running in CI environment - using predefined changed files"

    # Run each tool with predefined files if available
    if [ -n "${PHP_CHANGED_FILES:-}" ]; then
        echo "‚û° PHP Linting..."
        echo "$PHP_CHANGED_FILES" | tr ' ' '\n'
        if ! .ddev/commands/web/dev-phpcs --files="$PHP_CHANGED_FILES"; then
            LINT_STATUS=1
        fi
    else
        echo "‚úÖ Skipping PHP lint"
    fi

    if [ -n "${JS_CHANGED_FILES:-}" ]; then
        echo "‚û° JS Linting..."
        echo "$JS_CHANGED_FILES" | tr ' ' '\n'
        if ! .ddev/commands/web/dev-eslint --files="$JS_CHANGED_FILES"; then
            LINT_STATUS=1
        fi
    else
        echo "‚úÖ Skipping JS lint"
    fi

    if [ -n "${STYLE_CHANGED_FILES:-}" ]; then
        echo "‚û° CSS Linting..."
        echo "$STYLE_CHANGED_FILES" | tr ' ' '\n'
        if ! .ddev/commands/web/dev-stylelint --files="$STYLE_CHANGED_FILES"; then
            LINT_STATUS=1
        fi
    else
        echo "‚úÖ Skipping CSS lint"
    fi

    if [ -n "${TWIG_CHANGED_FILES:-}" ]; then
        echo "‚û° Twig Linting..."
        echo "$TWIG_CHANGED_FILES" | tr ' ' '\n'
        if ! .ddev/commands/web/dev-twigcs --files="$TWIG_CHANGED_FILES"; then
            LINT_STATUS=1
        fi
    else
        echo "‚úÖ Skipping Twig lint"
    fi

    if [ -n "${TEXT_CHANGED_FILES:-}" ]; then
        echo "‚û° Spell Checking..."
        echo "$TEXT_CHANGED_FILES" | tr ' ' '\n'
        if ! .ddev/commands/web/dev-cspell --files="$TEXT_CHANGED_FILES"; then
            LINT_STATUS=1
        fi
    else
        echo "‚úÖ Skipping spell check"
    fi
else
    echo "üñ• Running locally"

    # Parse command line arguments
    if [ "$#" -gt 0 ]; then
        case "$1" in
            --all)
                echo "üîç Checking all files..."
                ARGS="--all"
                ;;
            *)
                echo "‚ùå Unknown option: $1"
                echo "Usage: ddev dev-lint [--all]"
                exit 1
                ;;
        esac
    else
        echo "üîç Using git diff..."
        ARGS=""
    fi

    # Run each tool with the same arguments
    echo "‚û° PHP Linting..."
    if ! .ddev/commands/web/dev-phpcs $ARGS; then
        LINT_STATUS=1
    fi

    echo "‚û° JS Linting..."
    if ! .ddev/commands/web/dev-eslint $ARGS; then
        LINT_STATUS=1
    fi

    echo "‚û° CSS Linting..."
    if ! .ddev/commands/web/dev-stylelint $ARGS; then
        LINT_STATUS=1
    fi

    echo "‚û° Twig Linting..."
    if ! .ddev/commands/web/dev-twigcs $ARGS; then
        LINT_STATUS=1
    fi

    echo "‚û° Spell Checking..."
    if ! .ddev/commands/web/dev-cspell $ARGS; then
        LINT_STATUS=1
    fi
fi

if [ $LINT_STATUS -eq 0 ]; then
    echo "‚úÖ All linting completed successfully!"
    exit 0
else
    echo "‚ùå Some linting checks failed"
    exit 1
fi