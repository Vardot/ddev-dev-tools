#!/bin/bash

set -e

echo "üì¶ Reading changed files from .ddev"

PHP_CHANGED_FILES=$(cat .ddev/changed_php_files.txt 2>/dev/null | xargs)
JS_CHANGED_FILES=$(cat .ddev/changed_js_files.txt 2>/dev/null | xargs)
STYLE_CHANGED_FILES=$(cat .ddev/changed_css_files.txt 2>/dev/null | xargs)
TWIG_CHANGED_FILES=$(cat .ddev/changed_twig_files.txt 2>/dev/null | xargs)
TEXT_CHANGED_FILES=$(cat .ddev/changed_text_files.txt 2>/dev/null | xargs)

EXIT_CODE=0

echo "üîß Installing dependencies (Composer & Yarn)"
composer install --optimize-autoloader || { echo "‚ùå Composer install failed"; exit 1; }
yarn --modules-folder /var/www/html/node_modules --cwd /var/www/html/docroot/core/ install || { echo "‚ùå Yarn install failed"; exit 1; }

echo "üéØ Running linters..."

# PHP Linting
if [ -n "$PHP_CHANGED_FILES" ]; then
  echo "üßº PHP Linting on:"
  echo "$PHP_CHANGED_FILES" | tr ' ' '\n'
  command -v phpcs >/dev/null || { echo "‚ùå PHPCS not found"; EXIT_CODE=1; }
  phpcs --version || EXIT_CODE=1
  phpcs -- -s --colors --standard=Drupal --report-full --report-summary $PHP_CHANGED_FILES || EXIT_CODE=1
  phpcs -- -s --colors --standard=DrupalPractice --report-full --report-summary $PHP_CHANGED_FILES || EXIT_CODE=1
else
  echo "‚úÖ No PHP files changed"
fi

# JS Linting
if [ -n "$JS_CHANGED_FILES" ]; then
  echo "üßº JS Linting on:"
  echo "$JS_CHANGED_FILES" | tr ' ' '\n'
  node ./node_modules/eslint/bin/eslint.js --version || EXIT_CODE=1
  node ./node_modules/eslint/bin/eslint.js --config=docroot/core/.eslintrc.json --no-eslintrc -f stylish --color $JS_CHANGED_FILES || EXIT_CODE=1
else
  echo "‚úÖ No JS files changed"
fi

# CSS Linting
if [ -n "$STYLE_CHANGED_FILES" ]; then
  echo "üßº CSS Linting on:"
  echo "$STYLE_CHANGED_FILES" | tr ' ' '\n'
  node ./node_modules/stylelint/bin/stylelint.mjs --version || EXIT_CODE=1
  node ./node_modules/stylelint/bin/stylelint.mjs --config ./.stylelintrc.json --color $STYLE_CHANGED_FILES || EXIT_CODE=1
else
  echo "‚úÖ No CSS files changed"
fi

# Twig Linting
if [ -n "$TWIG_CHANGED_FILES" ]; then
  echo "üßº Twig Linting on:"
  echo "$TWIG_CHANGED_FILES" | tr ' ' '\n'
  composer config allow-plugins.vincentlanglet/twig-cs-fixer true
  composer config allow-plugins.dealerdirect/phpcodesniffer-composer-installer true
  composer require --dev vincentlanglet/twig-cs-fixer || EXIT_CODE=1
  ./vendor/bin/twig-cs-fixer --version || EXIT_CODE=1
  ./vendor/bin/twig-cs-fixer lint $TWIG_CHANGED_FILES || EXIT_CODE=1
else
  echo "‚úÖ No Twig files changed"
fi

# Spell Checking
if [ -n "$TEXT_CHANGED_FILES" ]; then
  echo "üìî Spell Checking on:"
  echo "$TEXT_CHANGED_FILES" | tr ' ' '\n'
  node ./node_modules/cspell/bin.mjs --version || EXIT_CODE=1
  node ./node_modules/cspell/bin.mjs --config .cspell.json --color $TEXT_CHANGED_FILES || EXIT_CODE=1
else
  echo "‚úÖ No text/code files changed for spell checking"
fi

echo "‚úÖ Linting finished"
exit $EXIT_CODE
