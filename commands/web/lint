#!/bin/bash

# Fail on:
# -e : any command fails
# -u : undefined variables
# -o pipefail : failure in a pipeline propagates
set -euo pipefail

echo "üîç Running linters..."

# --- PHP Coding Standards ---
if [ -n "${PHP_CHANGED_FILES:-}" ]; then
  echo "‚û° PHP Linting..."
  echo "$PHP_CHANGED_FILES" | tr ' ' '\n'
  phpcs -- -s --colors --report-full --report-summary $PHP_CHANGED_FILES
  phpcs -- -s --colors --report-full --report-summary $PHP_CHANGED_FILES
else
  echo "‚úÖ Skipping PHP lint"
fi

# --- JavaScript ---
if [ -n "${JS_CHANGED_FILES:-}" ]; then
  echo "‚û° JS Linting..."
  echo "$JS_CHANGED_FILES" | tr ' ' '\n'
  node ./node_modules/eslint/bin/eslint.js --config=docroot/core/.eslintrc.json --no-eslintrc -f stylish --color $JS_CHANGED_FILES
else
  echo "‚úÖ Skipping JS lint"
fi

# --- CSS ---
if [ -n "${STYLE_CHANGED_FILES:-}" ]; then
  echo "‚û° CSS Linting..."
  echo "$STYLE_CHANGED_FILES" | tr ' ' '\n'
  node ./node_modules/stylelint/bin/stylelint.mjs --config ./.stylelintrc.json --color $STYLE_CHANGED_FILES
else
  echo "‚úÖ Skipping CSS lint"
fi

# --- Twig ---
if [ -n "${TWIG_CHANGED_FILES:-}" ]; then
  echo "‚û° Twig Linting..."
  echo "$TWIG_CHANGED_FILES" | tr ' ' '\n'
  ./bin/twig-cs-fixer lint $TWIG_CHANGED_FILES
else
  echo "‚úÖ Skipping Twig lint"
fi

# --- Spell Checking ---
if [ -n "${TEXT_CHANGED_FILES:-}" ]; then
  echo "‚û° Spell Checking..."
  echo "$TEXT_CHANGED_FILES" | tr ' ' '\n'
  node ./node_modules/cspell/bin.mjs --config .cspell.json --color $TEXT_CHANGED_FILES
else
  echo "‚úÖ Skipping spell check"
fi

echo "üéâ All linting done successfully."
